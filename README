
 __          __  _                            _     _ _       _               
 \ \        / / | |                          | |   (_) |     | |              
  \ \  /\  / /__| | ___ ___  _ __ ___   ___  | |__  _| |_ ___| |__   ___  ___ 
   \ \/  \/ / _ \ |/ __/ _ \| '_ ` _ \ / _ \ | '_ \| | __/ __| '_ \ / _ \/ __|
    \  /\  /  __/ | (_| (_) | | | | | |  __/ | |_) | | || (__| | | |  __/\__ \
     \/  \/ \___|_|\___\___/|_| |_| |_|\___| |_.__/|_|\__\___|_| |_|\___||___/
                                                                              

Da ya need to retrieve your results from airtable ?
Do you want you realtime updates in your airtable database to appear on your webbage?
Do you need a simple way to setup either a full result request, or a single id entry request?

Well, here it is, just help urself.

                    iiii                     
                   i::::i                    
                    iiii                     
                                             
  aaaaaaaaaaaaa   iiiiiiirrrrr   rrrrrrrrr   
  a::::::::::::a  i:::::ir::::rrr:::::::::r  
  aaaaaaaaa:::::a  i::::ir:::::::::::::::::r 
           a::::a  i::::irr::::::rrrrr::::::r
    aaaaaaa:::::a  i::::i r:::::r     r:::::r
  aa::::::::::::a  i::::i r:::::r     rrrrrrr
 a::::aaaa::::::a  i::::i r:::::r            
a::::a    a:::::a  i::::i r:::::r            
a::::a    a:::::a i::::::ir:::::r            
a:::::aaaa::::::a i::::::ir:::::r            
 a::::::::::aa:::ai::::::ir:::::r            
  aaaaaaaaaa  aaaaiiiiiiiirrrrrrr table!
                                             
                                                                                                                                                                            
                                                                                                                                                    
                                                                                                                                                    
                                                                                                                                                    
Setup config.js with your api keys,

Setup headers with config.js name.

Setup your table name
#in index.js

let tableName = "the name of your table" 
                                                                              
then then connect everything: 

branch(router, headers, base, "index", "the page <title>", 0)

#router, must be kept as is
#hedears, modify config.'name' header.
#base is the url containing tableName
#"index" is a string that refer to the name of your views in pug.
#"the page title", is your html title
#last arg is by default false (0). can be set to true to activate "viewname_id.pug"

"index" represent the name of your pug view.
create index.pug to retrieve the results


indexid.pug will also retrieve the result of results when branch(,,,,,) 5th arg set to 1.
branch(router, headers, base, "index", "the page <title>", 1)